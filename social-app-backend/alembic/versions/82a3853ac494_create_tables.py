"""create tables

Revision ID: 82a3853ac494
Revises: 42a07750ec1f
Create Date: 2024-11-11 09:47:35.174795

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '82a3853ac494'
down_revision: Union[str, None] = '42a07750ec1f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('profile_picture_url', sa.String(), nullable=True),
    sa.Column('bio', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.CheckConstraint('length(username) >= 3', name='users_username_check'),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('conversations',
    sa.Column('conversation_id', sa.String(length=50), nullable=False),
    sa.Column('user1_id', sa.String(length=50), nullable=True),
    sa.Column('user2_id', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user1_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['user2_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('conversation_id'),
    sa.UniqueConstraint('user1_id', 'user2_id', name='unique_conversation')
    )
    op.create_table('follows',
    sa.Column('follow_id', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.String(length=50), nullable=True),
    sa.Column('following_id', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['following_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('follow_id'),
    sa.UniqueConstraint('user_id', 'following_id', name='unique_follow')
    )
    op.create_table('posts',
    sa.Column('post_id', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.String(length=50), nullable=True),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('length(content) > 0', name='posts_content_check'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('post_id')
    )
    op.create_table('user_sessions',
    sa.Column('session_id', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('session_id')
    )
    op.create_table('comments',
    sa.Column('comment_id', sa.String(length=50), nullable=False),
    sa.Column('post_id', sa.String(length=50), nullable=True),
    sa.Column('user_id', sa.String(length=50), nullable=True),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('length(content) > 0', name='comments_content_check'),
    sa.ForeignKeyConstraint(['post_id'], ['posts.post_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('comment_id')
    )
    op.create_table('likes',
    sa.Column('like_id', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.String(length=50), nullable=True),
    sa.Column('post_id', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.post_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('like_id'),
    sa.UniqueConstraint('user_id', 'post_id', name='unique_user_post_like')
    )
    op.create_table('messages',
    sa.Column('message_id', sa.String(length=50), nullable=False),
    sa.Column('conversation_id', sa.String(length=50), nullable=True),
    sa.Column('sender_id', sa.String(length=50), nullable=True),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('SENT', 'DELIVERED', 'READ', name='messagestatus'), nullable=True),
    sa.Column('is_edited', sa.Boolean(), nullable=True),
    sa.Column('edited_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('length(content) > 0', name='messages_content_check'),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.conversation_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('message_id')
    )
    op.create_table('post_images',
    sa.Column('image_id', sa.String(length=50), nullable=False),
    sa.Column('post_id', sa.String(length=50), nullable=True),
    sa.Column('image_url', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.post_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('image_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('post_images')
    op.drop_table('messages')
    op.drop_table('likes')
    op.drop_table('comments')
    op.drop_table('user_sessions')
    op.drop_table('posts')
    op.drop_table('follows')
    op.drop_table('conversations')
    op.drop_table('users')
    # ### end Alembic commands ###
